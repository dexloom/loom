[package]
name = "loom"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
# broadcast
loom-broadcast-accounts = { workspace = true, optional = true }
loom-broadcast-broadcaster = { workspace = true, optional = true }
loom-broadcast-flashbots = { workspace = true, optional = true }
# core
loom-core-actors = { workspace = true, optional = true }
loom-core-actors-macros = { workspace = true, optional = true }
loom-core-block-history = { workspace = true, optional = true }
loom-core-blockchain = { workspace = true, optional = true }
loom-core-blockchain-actors = { workspace = true, optional = true }
loom-core-mempool = { workspace = true, optional = true }
loom-core-router = { workspace = true, optional = true }
loom-core-topology = { workspace = true, optional = true }
# defi
loom-defi-abi = { workspace = true, optional = true }
loom-defi-address-book = { workspace = true, optional = true }
loom-defi-health-monitor = { workspace = true, optional = true }
loom-defi-market = { workspace = true, optional = true }
loom-defi-pools = { workspace = true, optional = true }
loom-defi-preloader = { workspace = true, optional = true }
loom-defi-price = { workspace = true, optional = true }
loom-defi-uniswap-v3-math = { workspace = true, optional = true }
# evm
loom-evm-db = { workspace = true, optional = true }
loom-evm-utils = { workspace = true, optional = true }
# execution
loom-execution-estimator = { workspace = true, optional = true }
loom-execution-multicaller = { workspace = true, optional = true }
# metrics
loom-metrics = { workspace = true, optional = true }
# node
loom-node-actor-config = { workspace = true, optional = true }
loom-node-db-access = { workspace = true, optional = true }
loom-node-debug-provider = { workspace = true, optional = true }
loom-node-exex = { workspace = true, optional = true }
loom-node-grpc = { workspace = true, optional = true }
loom-node-grpc-exex-proto = { workspace = true, optional = true }
loom-node-json-rpc = { workspace = true, optional = true }
loom-node-player = { workspace = true, optional = true }
# rpc
loom-rpc-handler = { workspace = true, optional = true }
loom-rpc-state = { workspace = true, optional = true }
# storage
loom-storage-db = { workspace = true, optional = true }
# strategy
loom-strategy-backrun = { workspace = true, optional = true }
loom-strategy-merger = { workspace = true, optional = true }
# types
loom-types-blockchain = { workspace = true, optional = true }
loom-types-entities = { workspace = true, optional = true }
loom-types-events = { workspace = true, optional = true }

[features]
broadcast = []
core = []
defi = []
evm = []
execution = []
metrics = ["dep:loom-metrics"]
node = []
rpc = []
storage = []
strategy = []
types = []

broadcast-accounts = ["broadcast", "dep:loom-broadcast-accounts"]
broadcast-broadcaster = ["broadcast", "dep:loom-broadcast-broadcaster"]
broadcast-flashbots = ["broadcast", "dep:loom-broadcast-flashbots"]

core-actors = ["core", "dep:loom-core-actors"]
core-actors-macros = ["core", "dep:loom-core-actors-macros"]
core-block-history = ["core", "dep:loom-core-block-history"]
core-blockchain = ["core", "dep:loom-core-blockchain"]
core-blockchain-actors = ["core", "dep:loom-core-blockchain-actors"]
core-mempool = ["core", "dep:loom-core-mempool"]
core-router = ["core", "dep:loom-core-router"]
core-topology = ["core", "dep:loom-core-topology"]

defi-abi = ["defi", "dep:loom-defi-abi"]
defi-address-book = ["defi", "dep:loom-defi-address-book"]
defi-health-monitor = ["defi", "dep:loom-defi-health-monitor"]
defi-market = ["defi", "dep:loom-defi-market"]
defi-pools = ["defi", "dep:loom-defi-pools"]
defi-preloader = ["defi", "dep:loom-defi-preloader"]
defi-price = ["defi", "dep:loom-defi-price"]
defi-uniswap-v3-math = ["defi", "dep:loom-defi-uniswap-v3-math"]

evm-db = ["evm", "dep:loom-evm-db"]
evm-utils = ["evm", "dep:loom-evm-utils"]

execution-estimator = ["execution", "dep:loom-execution-estimator"]
execution-multicaller = ["execution", "dep:loom-execution-multicaller"]

node-actor-config = ["node", "dep:loom-node-actor-config"]
node-db-access = ["node", "dep:loom-node-db-access"]
node-debug-provider = ["node", "dep:loom-node-debug-provider"]
node-exex = ["node", "dep:loom-node-exex"]
node-grpc = ["node", "dep:loom-node-grpc"]
node-grpc-exex-proto = ["node", "dep:loom-node-grpc-exex-proto"]
node-json-rpc = ["node", "dep:loom-node-json-rpc"]
node-player = ["node", "dep:loom-node-player"]

rpc-handler = ["rpc", "dep:loom-rpc-handler"]
rpc-state = ["rpc", "dep:loom-rpc-state"]

storage-db = ["storage", "dep:loom-storage-db"]

strategy-backrun = ["strategy", "dep:loom-strategy-backrun"]
strategy-merger = ["strategy", "dep:loom-strategy-merger"]

types-blockchain = ["types", "dep:loom-types-blockchain"]
types-entities = ["types", "dep:loom-types-entities"]
types-events = ["types", "dep:loom-types-events"]

full = [
    "broadcast-full",
    "core-full",
    "defi-full",
    "evm-full",
    "execution-full",
    "metrics-full",
    "node-full",
    "rpc-full",
    "storage-full",
    "types-full",
]

full-json-rpc = [
    "broadcast-full",
    "core-full",
    "defi-full",
    "evm-full",
    "execution-full",
    "metrics-full",
    "node-full",
    "node-actor-config",
    "node-json-rpc",
    "storage-full",
    "types-full",
]

full-exex = [
    "broadcast-full",
    "core-full",
    "defi-full",
    "evm-full",
    "execution-full",
    "metrics-full",
    "node-actor-config",
    "node-exex",
    "rpc-full",
    "storage-full",
    "types-full",
]

full-db-access = [
    "broadcast-full",
    "core-full",
    "defi-full",
    "evm-full",
    "execution-full",
    "metrics-full",
    "node-actor-config",
    "node-db-access",
    "rpc-full",
    "storage-full",
    "types-full",
    # enable db access feature for deps
    "loom-core-blockchain-actors?/db-access",
    "loom-core-topology?/db-access",
]

broadcast-full = [
    "broadcast-accounts",
    "broadcast-broadcaster",
    "broadcast-flashbots",
]
core-full = [
    "core-actors",
    "core-actors-macros",
    "core-block-history",
    "core-blockchain",
    "core-blockchain-actors",
    "core-mempool",
    "core-router",
    "core-topology",
]

defi-full = [
    "defi-abi",
    "defi-address-book",
    "defi-health-monitor",
    "defi-market",
    "defi-pools",
    "defi-preloader",
    "defi-price",
    "defi-uniswap-v3-math",
]
evm-full = [
    "evm-db",
    "evm-utils",
]
execution-full = [
    "execution-estimator",
    "execution-multicaller",
]
metrics-full = [
    "metrics",
]
node-full = [
    "node-actor-config",
    "node-db-access",
    "node-debug-provider",
    "node-exex",
    "node-grpc",
    "node-grpc-exex-proto",
    "node-json-rpc",
    "node-player",
]
rpc-full = [
    "rpc-handler",
    "rpc-state",
]
storage-full = [
    "storage-db",
]
strategy-full = [
    "strategy-backrun",
    "strategy-merger",
]
types-full = [
    "types-blockchain",
    "types-entities",
    "types-events",
]
